---
import Layout from "../layouts/Layout.astro";
---

<Layout title="Residencial Demo">
    <main>
        <section class="section-pc">
          <div class="titulo">Residencial Demo</div>
          <div class="tipos">
            <button class="tipo-button" id="onButton">Select ON</button>
            <button class="tipo-button selected" id="offButton">Select OFF</button>

        </div>
        
			<svg id="vistaDelantera" class="svg-overlay-off" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 1920 1080">
        <image class="heroImage" width="1920" height="1080" href="frontal.webp"></image>

            <rect id="ventanaA" x="44" y="590" class="secondrow ventanaA" width="365" height="146"/>
            <text class="svg-text negrita" x="170" y="660">1ºA</text>
            <text class="svg-text" x="210" y="660">- Vendido</text>
            <text class="svg-text" x="160" y="690">3 Dormitorios</text>
            <rect id="ventanaB" x="480" y="593" class="secondrow ventanaB" width="498" height="146" />
            <text class="svg-text negrita" x="660" y="660">1ºB</text>
            <text class="svg-text" x="700" y="660">- Vendido</text>
            <text class="svg-text" x="660" y="690">2 Dormitorios</text>
            <rect id="ventanaC" x="1010" y="596" class="toprow ventanaC" width="503" height="146" />
            <text class="svg-text negrita" x="1200" y="660">1ºC</text>
            <text class="svg-text" x="1240" y="660">- Disponible</text>
            <text class="svg-text" x="1200" y="690">2 Dormitorios</text>
            <rect id="ventanaD" x="1573" y="600" class="secondrow ventanaD" width="285" height="142" />
            <text class="svg-text negrita" x="1650" y="670">1ºD</text>
            <text class="svg-text" x="1690" y="670">- Vendido</text>
            <text class="svg-text" x="1650" y="700">3 Dormitorios</text>

            <rect id="ventanaE" x="51" y="401" class="secondrow ventanaE" width="355" height="137" />
            <text class="svg-text negrita" x="160" y="470">2ºE</text>
            <text class="svg-text" x="200" y="470">- Vendido</text>
            <text class="svg-text" x="160" y="500">2 Dormitorios</text>
            <rect id="ventanaF" x="478" y="407" class="toprow ventanaF" width="505" height="131" />
            <text class="svg-text negrita" x="650" y="470">2ºF</text>
            <text class="svg-text" x="690" y="470">- Disponible</text>
            <text class="svg-text" x="650" y="500">2 Dormitorios</text>
            <rect id="ventanaG" x="1011" y="408" class="toprow ventanaG" width="305" height="132" />
            <text class="svg-text negrita" x="1095" y="470">2ºG</text>
            <text class="svg-text" x="1139" y="470">- Disponible</text>
            <text class="svg-text" x="1095" y="500">2 Dormitorios</text>
            <rect id="ventanaH" x="1346" y="410" class="toprow ventanaH" width="346" height="133" />
            <text class="svg-text negrita" x="1450" y="470">2ºH</text>
            <text class="svg-text" x="1499" y="470">- Disponible</text>
            <text class="svg-text" x="1450" y="500">3 Dormitorios</text>
            <rect id="ventanaI" x="1726" y="412" class="secondrow ventanaI" width="136" height="133" />
            <text class="svg-text negrita" x="1730" y="470">2ºI</text>
            <text class="svg-text" x="1770" y="470">- Vend</text>
            <text class="svg-text" x="1740" y="500">3 Dorm</text>

            <rect id="ventanaJ" x="52" y="217" class="secondrow ventanaJ" width="359" height="135" />
            <text class="svg-text negrita" x="160" y="287">3ºJ</text>
            <text class="svg-text" x="200" y="287">- Vendido</text>
            <text class="svg-text" x="160" y="317">4 Dormitorios</text>
            <rect id="ventanaK" x="474" y="220" class="secondrow ventanaK" width="302" height="142" />
            <text class="svg-text negrita" x="570" y="297">3ºK</text>
            <text class="svg-text" x="610" y="297">- Vendido</text>
            <text class="svg-text" x="570" y="327">2 Dormitorios</text>

    </svg>
			
			  <div>
				<dialog id="fichaVentanaA">
					<button class="closeButton"> &#9587;</button>
					<img src="/viviendaA.webp" alt="ficha comercial" class="modalImage">
				</dialog>
				<dialog id="fichaVentanaB">
					<button class="closeButton"> &#9587;</button>
					<img src="/viviendaB.webp" alt="ficha comercial" class="modalImage">
				</dialog>
				<dialog id="fichaVentanaC">
					<button class="closeButton"> &#9587;</button>
					<img src="/viviendaC.webp" alt="ficha comercial" class="modalImage">
				</dialog>
				<dialog id="fichaVentanaD">
					<button class="closeButton"> &#9587;</button>
					<img src="/viviendaD.webp" alt="ficha comercial" class="modalImage">
				</dialog>
				<dialog id="fichaVentanaE">
					<button class="closeButton"> &#9587;</button>
					<img src="/viviendaE.webp" alt="ficha comercial" class="modalImage">
				</dialog>
				<dialog id="fichaVentanaF">
					<button class="closeButton"> &#9587;</button>
					<img src="/viviendaF.webp" alt="ficha comercial" class="modalImage">
				</dialog>
        <dialog id="fichaVentanaG">
          <button class="closeButton"> &#9587;</button>
          <img src="/viviendaG.webp" alt="ficha comercial" class="modalImage">
        </dialog>
        <dialog id="fichaVentanaH">
          <button class="closeButton"> &#9587;</button>
          <img src="/viviendaH.webp" alt="ficha comercial" class="modalImage">
        </dialog>
        <dialog id="fichaVentanaI">
          <button class="closeButton"> &#9587;</button>
          <img src="/viviendaI.webp" alt="ficha comercial" class="modalImage">
        </dialog>
        <dialog id="fichaVentanaJ">
          <button class="closeButton"> &#9587;</button>
          <img src="/viviendaJ.webp" alt="ficha comercial" class="modalImage">
        </dialog>
        <dialog id="fichaVentanaK">
          <button class="closeButton"> &#9587;</button>
          <img src="/viviendaK.webp" alt="ficha comercial" class="modalImage">
        </dialog>
        <dialog id="fichaVentanaL">
          <button class="closeButton"> &#9587;</button>
          <img src="/viviendaL.webp" alt="ficha comercial" class="modalImage">
        </dialog>
      </div>

        </section>
		<section class="section-mobile">
			<div class='imageWrapperHero'>
				<img src="/frontalNuevo.webp"/>
			  </div>
				
			  </div>
			  <div class="mobile-text">
				<ul class="mobile-ul">
					<li class="titulo-movil">Residencial Demo</li>
					<li class="">
            Residencial Demo es una promoción exclusiva de 11 viviendas de obra nueva diseñadas para ofrecerte el máximo confort y calidad. Disfruta de acabados premium y una ubicación privilegiada cerca de todo lo que necesitas en tu ciudad
					<li id="click-aqui">Haz click aquí para descubrir más</li>
				</ul>
			</div>
			
        </section>
    </main>
</Layout>

	<script type="module">
		document.querySelectorAll(".ventanaA").forEach(el => {
			el.addEventListener("click",()=>{
				document.getElementById("fichaVentanaA").showModal()
			})
		})
		document.querySelectorAll(".ventanaB").forEach(el => {
			el.addEventListener("click",()=>{
				document.getElementById("fichaVentanaB").showModal()
			})
		})
		document.querySelectorAll(".ventanaC").forEach(el => {
			el.addEventListener("click",()=>{
				document.getElementById("fichaVentanaC").showModal()
			})
		})
		document.querySelectorAll(".ventanaD").forEach(el => {
			el.addEventListener("click",()=>{
				document.getElementById("fichaVentanaD").showModal()
			})
		})
		document.querySelectorAll(".ventanaE").forEach(el => {
			el.addEventListener("click",()=>{
				document.getElementById("fichaVentanaE").showModal()
			})
		})
		document.querySelectorAll(".ventanaF").forEach(el => {
			el.addEventListener("click",()=>{
				document.getElementById("fichaVentanaF").showModal()
			})
		})
		document.querySelectorAll(".ventanaG").forEach(el => {
			el.addEventListener("click",()=>{
				document.getElementById("fichaVentanaG").showModal()
			})
		})
		document.querySelectorAll(".ventanaH").forEach(el => {
			el.addEventListener("click",()=>{
				document.getElementById("fichaVentanaH").showModal()
			})
		})
		document.querySelectorAll(".ventanaI").forEach(el => {
			el.addEventListener("click",()=>{
				document.getElementById("fichaVentanaI").showModal()
			})
		})
		document.querySelectorAll(".ventanaJ").forEach(el => {
			el.addEventListener("click",()=>{
				document.getElementById("fichaVentanaJ").showModal()
			})
		})
		document.querySelectorAll(".ventanaK").forEach(el => {
			el.addEventListener("click",()=>{
				document.getElementById("fichaVentanaK").showModal()
			})
		})
		document.querySelectorAll(".ventanaL").forEach(el => {
			el.addEventListener("click",()=>{
				document.getElementById("fichaVentanaL").showModal()
			})
		})




	
		document.getElementById("fichaVentanaA").addEventListener('click', (event)=> {
			  let rect = document.getElementById("fichaVentanaA").getBoundingClientRect();
			  let isInDialogA = (rect.top <= event.clientY && event.clientY <= rect.top + rect.height &&
			rect.left <= event.clientX && event.clientX <= rect.left + rect.width);
			  if (!isInDialogA) {
				document.getElementById("fichaVentanaA").close();
			  }
		});
		document.getElementById("fichaVentanaB").addEventListener('click', (event)=> {
			  let rectB = document.getElementById("fichaVentanaB").getBoundingClientRect();
			  let isInDialogB = (rectB.top <= event.clientY && event.clientY <= rectB.top + rectB.height &&
			rectB.left <= event.clientX && event.clientX <= rectB.left + rectB.width);
			  if (!isInDialogB) {
				document.getElementById("fichaVentanaB").close();
			  }
		});
		document.getElementById("fichaVentanaC").addEventListener('click', (event)=> {
			  let rectC = document.getElementById("fichaVentanaC").getBoundingClientRect();
			  let isInDialogC = (rectC.top <= event.clientY && event.clientY <= rectC.top + rectC.height &&
			rectC.left <= event.clientX && event.clientX <= rectC.left + rectC.width);
			  if (!isInDialogC) {
				document.getElementById("fichaVentanaC").close();
			  }
		});
		document.getElementById("fichaVentanaD").addEventListener('click', (event)=> {
			  let rectD = document.getElementById("fichaVentanaD").getBoundingClientRect();
			  let isInDialogD = (rectD.top <= event.clientY && event.clientY <= rectD.top + rectD.height &&
			rectD.left <= event.clientX && event.clientX <= rectD.left + rectD.width);
			  if (!isInDialogD) {
				document.getElementById("fichaVentanaD").close();
			  }
		});
		document.getElementById("fichaVentanaE").addEventListener('click', (event)=> {
			  let rectE = document.getElementById("fichaVentanaE").getBoundingClientRect();
			  let isInDialogE = (rectE.top <= event.clientY && event.clientY <= rectE.top + rectE.height &&
			rectE.left <= event.clientX && event.clientX <= rectE.left + rectE.width);
			  if (!isInDialogE) {
				document.getElementById("fichaVentanaE").close();
			  }
		});
		document.getElementById("fichaVentanaF").addEventListener('click', (event)=> {
			  let rectF = document.getElementById("fichaVentanaF").getBoundingClientRect();
			  let isInDialogF = (rectF.top <= event.clientY && event.clientY <= rectF.top + rectF.height &&
			rectF.left <= event.clientX && event.clientX <= rectF.left + rectF.width);
			  if (!isInDialogF) {
				document.getElementById("fichaVentanaF").close();
			  }
		});
    		document.getElementById("fichaVentanaG").addEventListener('click', (event)=> {
			  let rectG = document.getElementById("fichaVentanaG").getBoundingClientRect();
			  let isInDialogG = (rectG.top <= event.clientY && event.clientY <= rectG.top + rectG.height &&
			rectG.left <= event.clientX && event.clientX <= rectG.left + rectG.width);
			  if (!isInDialogG) {
				document.getElementById("fichaVentanaG").close();
			  }
		});
       		document.getElementById("fichaVentanaH").addEventListener('click', (event)=> {
			  let rectH = document.getElementById("fichaVentanaH").getBoundingClientRect();
			  let isInDialogH = (rectH.top <= event.clientY && event.clientY <= rectH.top + rectH.height &&
			rectH.left <= event.clientX && event.clientX <= rectH.left + rectH.width);
			  if (!isInDialogH) {
				document.getElementById("fichaVentanaH").close();
			  }
		});
    document.getElementById("fichaVentanaI").addEventListener('click', (event)=> {
        let rectI = document.getElementById("fichaVentanaI").getBoundingClientRect();
        let isInDialogI = (rectI.top <= event.clientY && event.clientY <= rectI.top + rectI.height &&
      rectI.left <= event.clientX && event.clientX <= rectI.left + rectI.width);
        if (!isInDialogI) {
        document.getElementById("fichaVentanaI").close();
        }
    });
    document.getElementById("fichaVentanaJ").addEventListener('click', (event)=> {
        let rectJ = document.getElementById("fichaVentanaJ").getBoundingClientRect();
        let isInDialogJ = (rectJ.top <= event.clientY && event.clientY <= rectJ.top + rectJ.height &&
      rectJ.left <= event.clientX && event.clientX <= rectJ.left + rectJ.width);
        if (!isInDialogJ) {
        document.getElementById("fichaVentanaJ").close();
        }
    });
    document.getElementById("fichaVentanaK").addEventListener('click', (event)=> {
        let rectK = document.getElementById("fichaVentanaK").getBoundingClientRect();
        let isInDialogK = (rectK.top <= event.clientY && event.clientY <= rectK.top + rectK.height &&
      rectK.left <= event.clientX && event.clientX <= rectK.left + rectK.width);
        if (!isInDialogK) {
        document.getElementById("fichaVentanaK").close();
        }
    });
    document.getElementById("fichaVentanaL").addEventListener('click', (event)=> {
        let rectL = document.getElementById("fichaVentanaL").getBoundingClientRect();
        let isInDialogL = (rectL.top <= event.clientY && event.clientY <= rectL.top + rectL.height &&
      rectL.left <= event.clientX && event.clientX <= rectL.left + rectL.width);
        if (!isInDialogL) {
        document.getElementById("fichaVentanaL").close();
        }
    });

	

		const hamburgerMenu2 = document.querySelector(".hamburger-dialog")
		const hamburgerIcon2 = document.querySelector(".hamburger-icon")
		const clickAqui = document.querySelector("#click-aqui")

clickAqui.addEventListener("click",()=>{
	
	if (hamburgerMenu2.classList.contains("hamburger-open")){
		hamburgerMenu2.classList.remove("hamburger-open")
		hamburgerIcon2.classList.remove("hamburger-icon-rotated")

	}
	else{
		hamburgerMenu2.classList.add("hamburger-open")
		hamburgerIcon2.classList.add("hamburger-icon-rotated")
	}
})


// Funcionalidad para botones ON/OFF
const onButton = document.getElementById('onButton');
const offButton = document.getElementById('offButton');

function toggleOverlayMode(isOff) {
    // Resetear todos los textos primero
    const allTexts = document.querySelectorAll('.svg-text');
    allTexts.forEach(text => {
        text.style.fillOpacity = '';  // Remover el estilo inline
    });
    
    // Obtener el SVG actual
    const currentSvg = document.getElementById('vistaDelantera');
    
    if (isOff) {
        // Modo OFF: agregar clase de opacidad
        currentSvg.classList.add('svg-overlay-off');
        onButton.classList.remove('selected');
        offButton.classList.add('selected');
    } else {
        // Modo ON: quitar clase de opacidad
        currentSvg.classList.remove('svg-overlay-off');
        onButton.classList.add('selected');
        offButton.classList.remove('selected');
    }
}

onButton.addEventListener('click', (e) => {
    e.preventDefault();
    toggleOverlayMode(false);
});

offButton.addEventListener('click', (e) => {
    e.preventDefault();
    toggleOverlayMode(true);
});

// Función para controlar el texto en hover cuando está en modo OFF
function setupTextHoverControl() {
    const allRects = document.querySelectorAll('.toprow, .secondrow');
    
    allRects.forEach(rect => {
        rect.addEventListener('mouseenter', () => {
            // Solo aplicar si estamos en modo OFF
            const parentSvg = rect.closest('svg');
            if (parentSvg.classList.contains('svg-overlay-off')) {
                // Obtener las coordenadas del rectángulo
                const rectX = parseFloat(rect.getAttribute('x'));
                const rectY = parseFloat(rect.getAttribute('y'));
                const rectWidth = parseFloat(rect.getAttribute('width'));
                const rectHeight = parseFloat(rect.getAttribute('height'));
                
                // Buscar textos que estén dentro del área del rectángulo
                const texts = parentSvg.querySelectorAll('.svg-text');
                texts.forEach(text => {
                    const textX = parseFloat(text.getAttribute('x'));
                    const textY = parseFloat(text.getAttribute('y'));
                    
                    // Si el texto está dentro del área del rectángulo (con un pequeño margen)
                    if (textX >= rectX - 20 && textX <= rectX + rectWidth + 20 &&
                        textY >= rectY - 20 && textY <= rectY + rectHeight + 20) {
                        text.style.fillOpacity = '1';
                    }
                });
            }
        });
        
        rect.addEventListener('mouseleave', () => {
            const parentSvg = rect.closest('svg');
            if (parentSvg.classList.contains('svg-overlay-off')) {
                // Ocultar los textos relacionados cuando se quita el hover
                const rectX = parseFloat(rect.getAttribute('x'));
                const rectY = parseFloat(rect.getAttribute('y'));
                const rectWidth = parseFloat(rect.getAttribute('width'));
                const rectHeight = parseFloat(rect.getAttribute('height'));
                
                const texts = parentSvg.querySelectorAll('.svg-text');
                texts.forEach(text => {
                    const textX = parseFloat(text.getAttribute('x'));
                    const textY = parseFloat(text.getAttribute('y'));
                    
                    if (textX >= rectX - 20 && textX <= rectX + rectWidth + 20 &&
                        textY >= rectY - 20 && textY <= rectY + rectHeight + 20) {
                        text.style.fillOpacity = '0';
                    }
                });
            }
        });
    });
}

// Ejecutar la función cuando se carga la página
setupTextHoverControl();
		</script>



<style>
	body {
    overflow: hidden;
}

h1 {
    font-size: 4rem;
    font-weight: 700;
    line-height: 1;
    text-align: center;
    margin: 0;
    padding: 0;
}
section {
    background-color: hsl(240, 15%, 17%);
    height: calc(100vh - 48px);
    margin: 24px;
    border-radius: 12px;
    overflow: visible;
    display: flex;
    align-items: center;
    justify-content: flex-start;
}
svg {
  border-radius: 12px;
}
.titulo{
    text-align: center;
    color: white;
    font-size: 2rem;
    font-weight: 700;
}
.tipos {
        display: flex;
        justify-content: center;
        margin-bottom: 8px;
    }
    .tabs {
        display: flex;
        justify-content: center;
        margin-bottom: 8px;
        position: absolute;
        right: 50px;
    }
    .tab-button {
        padding: 12px 24px;
        border: none;
        background-color: hsl(240, 15%, 27%);
        color: hsl(240, 15%, 97%);
        cursor: pointer;
        font-size: 16px;
        border-radius: 4px;
        margin: 4px 1px;
        transition: background-color 0.3s;
    }
    .tab-button.selected {
        background-color: hsl(230, 100%, 69%);
    }
    .tab-button:hover {
        background-color: hsl(230, 100%, 75%);
    }
    .tipo-button {
        padding: 12px 24px;
        border: none;
        background-color: hsl(240, 15%, 27%);
        color: hsl(240, 15%, 97%);
        cursor: pointer;
        font-size: 0.95rem;
        border-radius: 4px;
        margin: 4px 4px;
        transition: background-color 0.3s;
    }
    .tipo-button.selected {
        background-color: hsl(230, 100%, 69%);
    }
    .tipo-button:hover {
        background-color: hsl(230, 100%, 75%);
    }
    .select{
        font-size: 1.2rem;
        font-weight: 400;
        color: white;
        position: absolute;
        right: 100px;
        margin-top: 15px;
    }
    
.imageWrapperHero {
        position: relative;
        max-width: 70vw; /* Ajustar la altura máxima */
        aspect-ratio: 16 / 9;
    }

.imageWrapperHero img {
    width: 100%;
	height: 100%;
    border-radius: 12px;
}
.imageWrapperHero svg {
    width: 100%;
	height: 100%;
    border-radius: 12px;
}


.image-area {
    position: absolute;
    left: 0;
    top: 0;
}

.toprow {
    fill: #75A93A;
    fill-opacity: 0.3;
    cursor: pointer;
    stroke: white;
    stroke-width: 2;
}

.secondrow {
    fill: #a93a3a;
    fill-opacity: 0.4;
    cursor: pointer;
    stroke: white;
    stroke-width: 2;
}

.toprow:hover {
    fill-opacity: 0.8;
}

.secondrow:hover {
    fill-opacity: 0.8;
}

/* Estilos para modo OFF */
.svg-overlay-off .toprow {
    fill-opacity: 0;
    stroke-opacity: 0;
}

.svg-overlay-off .secondrow {
    fill-opacity: 0;
    stroke-opacity: 0;
}

.svg-overlay-off .svg-text {
    fill-opacity: 0;
}

.svg-overlay-off .toprow:hover {
    fill-opacity: 0.8;
    stroke-opacity: 1;
}

.svg-overlay-off .secondrow:hover {
    fill-opacity: 0.8;
    stroke-opacity: 1;
}

.svg-text {
        fill: white;
        font:  1.5rem "Poppins", sans-serif;
        pointer-events: none;
        display: block;
    }
dialog {
    height: calc(100vh - 16px);
    border: none;
    background-color: transparent;
}

dialog::backdrop {
    background-color: #26263399;
}

.modalImage {
    height: 99%;
    margin: 0px;
    border: none;
}

.outline {
    fill: none;
    stroke: white;
    stroke-width: .2;
}

.section-mobile {
    display: none;
}

.fichaMovil {
    height: fit-content;
    width: fit-content;
}

.fichaMovil img {
    width: 90vw;
    aspect-ratio: 2481 / 3509;
    height: auto;
}

.mobile-ul {
    display: flex;
    flex-direction: column;
    gap: 16px;
}

.closeButton {
    position: fixed;
    top: 8px;
    right: 8px;
    height: 48px;
    width: 48px;
    outline: none;
    background-color: hsl(240, 15%, 27%);
    color: hsl(240, 15%, 97%);
    cursor: pointer;
    font-size: 16pt;
    border: 2px hsl(240, 15%, 27%) solid;
    border-radius: 250px;
    text-align: center;
    padding: 0;
}

.detalle-par {
    background-color: hsl(240, 15%, 37%);
    padding-block: 8px;
}

main {
    overflow: auto;
}
.section-pc{
	display: flex;
	flex-direction: column;
	max-height: calc(100dvh - 48px);
}
.description-text {
        text-align: center;
        margin-top: 16px;
		color: white;
    }
    .description-text h2 {
        font-size: 1.5rem;
        font-weight: 700;
        margin: 0;
    }
    .description-text p {
        font-size: 1rem;
        margin: 8px 0 0;
    }

    .negrita {
        font-weight: 700;
    }


/* CSS Móvil */
@media (orientation: portrait) {
    .section-pc {
        display: none;
    }

    .section-mobile {
        display: flex;
        flex-direction: column;
        justify-content: flex-start;
    }

    main {
        height: calc(100dvh - 80px);
    }

    .mobile-text {
        display: flex;
        color: white;
        width: 100vw;
        padding: 0;
    }

    .mobile-text ul {
        width: 100%;
        padding-inline: 0;
        gap: 0;
        text-align: center;
    }

    .mobile-text li {
        display: flex;
        justify-content: center;
        padding-inline: 16px;
        padding-block: 8px;
    }

    .mobile-text li span {
        cursor: pointer;
    }

    #click-aqui {
        background-color: hsl(230, 100%, 69%);
        border-radius: 12px;
        margin: 30px;
    }

    .titulo-movil {
        font-size: 1.5rem;
        font-weight: 700;
        color: hsl(230, 100%, 99%);
    }
    .imageWrapperHero {
      max-width: 100vw; /* Ajustar la altura máxima */
    }
}

.svg-number {
    fill: #a93a75 black;
    stroke: white;
    stroke-width: 0.4px;
    font: bold 0.8rem "Poppins", sans-serif;
}
</style>
